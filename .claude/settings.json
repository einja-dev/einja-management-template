{
	"permissions": {
		"allow": [
			"Bash(npm:*)",
			"Bash(git:*)",
			"Bash(ls:*)",
			"Bash(cd:*)",
			"Bash(pwd:*)",
			"Bash(cat:*)",
			"Bash(grep:*)",
			"Bash(find:*)",
			"Bash(yarn:*)",
			"Bash(pnpm:*)",
			"Bash(bun:*)",
			"Bash(npx:*)",
			"Bash(node:*)",
			"Bash(python3:*)",
			"Bash(echo:*)",
			"Bash(mkdir:*)",
			"Bash(cp:*)",
			"Bash(mv:*)",
			"Bash(touch:*)",
			"Bash(curl:*)",
			"Bash(wget:*)",
			"Bash(unzip:*)",
			"Bash(docker-compose:*)",
			"Bash(jq:*)",
			"WebFetch",
			"WebFetch(domain:*)",
			"WebSearch",
			"LS(*)",
			"Read(**)",
			"Read(//private/tmp/**)",
			"Glob(*)",
			"Grep(*)",
			"Edit(**)",
			"MultiEdit(**)",
			"Write",
			"Task(*)",
			"TodoRead(*)",
			"TodoWrite(*)",
			"NotebookRead(*)",
			"NotebookEdit(*)",
			"mcp__codex__codex",
			"mcp__github__get_pull_request",
			"mcp__github__get_pull_request_files",
			"mcp__github__update_pull_request",
			"mcp__github__list_commits",
			"mcp__github__get_commit",
			"mcp__github__get_file_contents",
			"mcp__github__search_code",
			"mcp__playwright",
			"mcp__playwright__browser_navigate",
			"mcp__playwright__browser_click",
			"mcp__playwright__browser_wait_for",
			"mcp__playwright__browser_evaluate",
			"mcp__playwright__browser_snapshot",
			"mcp__playwright__browser_console_messages",
			"mcp__playwright__browser_handle_dialog",
			"mcp__playwright__browser_type",
			"mcp__serena",
			"mcp__serena__activate_project",
			"mcp__serena__check_onboarding_performed",
			"mcp__serena__find_file",
			"mcp__serena__find_referencing_symbols",
			"mcp__serena__find_symbol",
			"mcp__serena__get_symbols_overview",
			"mcp__serena__insert_before_symbol",
			"mcp__serena__list_dir",
			"mcp__serena__replace_symbol_body",
			"mcp__serena__search_for_pattern",
			"mcp__serena__think_about_collected_information",
			"mcp__serena__think_about_whether_you_are_done"
		],
		"ask": [
			"Bash(rm -rf:*)",
			"Bash(rm -r -f:*)",
			"Bash(rm -f -r:*)",
			"Bash(rm:*)",
			"Bash(sudo:*)",
			"Bash(chmod:*)",
			"Bash(chown:*)",
			"Bash(kill:*)",
			"Bash(pkill:*)",
			"Bash(killall:*)"
		],
		"deny": ["Bash(rm -rf:*)"]
	},
	"enableAllProjectMcpServers": true,
	"enabledMcpjsonServers": ["playwright", "serena"],
	"includeCoAuthoredBy": false
}
